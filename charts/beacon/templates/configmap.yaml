apiVersion: v1
kind: ConfigMap
metadata:
  name: beacon-configmap
  namespace: {{ .Release.Namespace }}
data:
  envoy-config: |
    node:
      id: default
      cluster: {{ .Values.clusterName }}

    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: {{ .Values.service.envoyPort }}
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    common_http_protocol_options:
                      idle_timeout: 1s
                    forward_client_cert_details: sanitize_set
                    set_current_client_cert_details:
                      uri: true
                    codec_type: auto
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/grpcbeacon.Beacon"
                                grpc: {}
                              route:
                                cluster: local
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_certificate_sds_secret_configs:
                      - name: "spiffe://{{ .Values.spiffe.trustDomain }}{{ .Values.spiffe.idPath }}"
                        sds_config:
                          api_config_source:
                            api_type: gRPC
                            transport_api_version: V3
                            grpc_services:
                              envoy_grpc:
                                cluster_name: spire_agent
                    combined_validation_context:
                      default_validation_context:
                        match_subject_alt_names:
                        {{- range .Values.authorization.allowedExact }}
                          - exact: {{ quote . }}
                        {{- end}}
                      validation_context_sds_secret_config:
                        name: "spiffe://{{ .Values.spiffe.trustDomain }}"
                        sds_config:
                          api_config_source:
                            api_type: gRPC
                            transport_api_version: V3
                            grpc_services:
                              envoy_grpc:
                                cluster_name: spire_agent
                    tls_params:
                      ecdh_curves:
                        - X25519:P-256:P-521:P-384
      clusters:
        - name: local
          type: STATIC
          dns_lookup_family: V4_ONLY
          http2_protocol_options: {}
          load_assignment:
            cluster_name: local
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: {{ .Values.service.servicePort }}
        - name: spire_agent
          connect_timeout: 0.25s
          http2_protocol_options: {}
          load_assignment:
            cluster_name: spire_agent
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        pipe:
                          path: /opt/spire/sockets/spire-agent.sock
